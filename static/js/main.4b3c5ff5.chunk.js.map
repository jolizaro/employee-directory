{"version":3,"sources":["EmployeeTable.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeTable","filtered","sortByFirstName","sortByLastName","Table","striped","bordered","hover","onClick","style","cursor","map","emp","name","last","first","gender","location","state","id","value","App","useState","employees","setEmployees","setFiltered","searchState","setSearchState","useEffect","fetch","then","response","json","data","console","log","results","className","width","textAlign","type","placeholder","onChange","e","target","filter","toLowerCase","includes","sorted","sort","a","b","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RA4BeA,EAzBO,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,gBAAiBC,EAAqB,EAArBA,eAClD,OACE,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACI,gCACE,+BACE,oBAAIC,QAASL,EAAgBM,MAAO,CAACC,OAAO,WAA5C,uBACA,oBAAIF,QAASN,EAAiBO,MAAO,CAACC,OAAO,WAA7C,wBACA,wCACA,+CAGJ,gCACGT,EAASU,KAAI,SAAAC,GAAG,OACf,+BACE,6BAAKA,EAAIC,KAAKC,OACd,6BAAKF,EAAIC,KAAKE,QACd,6BAAKH,EAAII,SACT,6BAAKJ,EAAIK,SAASC,UAJXN,EAAIO,GAAGC,gBCkDbC,MA7Df,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOrB,EAAP,KAAiBwB,EAAjB,KACA,EAAsCH,mBAAS,IAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KA+CA,OA7CAC,qBAAU,WACRC,MAAM,gDACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZT,EAAaS,EAAKG,SAClBX,EAAYQ,EAAKG,cAGpB,IAqCD,sBAAKC,UAAU,MAAf,UACE,oDACA,sBAAMA,UAAU,MAAhB,SACE,uBAAO5B,MAAO,CAAC6B,MAAO,QAASC,UAAU,UAAWC,KAAK,OAAOC,YAAY,4BAA4BrB,MAAOM,EAAagB,SAZvG,SAACC,GAC1BhB,EAAegB,EAAEC,OAAOxB,OACxB,IAAMgB,EAAUb,EAAUsB,QAAO,SAAAjC,GAC/B,OAAOA,EAAIK,SAASC,MAAM4B,cAAcC,SAASJ,EAAEC,OAAOxB,MAAM0B,kBAElErB,EAAYW,QASV,cAAC,EAAD,CAAenC,SAAUA,EAAUE,eAxChB,WACrB,IAAM6C,EAAM,YAAOzB,GACnByB,EAAOC,MAAK,SAACC,EAAEC,GACb,OAAID,EAAErC,KAAKC,KAAOqC,EAAEtC,KAAKC,MACf,EACCoC,EAAErC,KAAKC,KAAOqC,EAAEtC,KAAKC,KACvB,EAEF,KAETW,EAAYuB,IA8ByD9C,gBA3B/C,WACtB,IAAM8C,EAAM,YAAOzB,GACnByB,EAAOC,MAAK,SAACC,EAAEC,GACb,OAAID,EAAErC,KAAKE,MAAQoC,EAAEtC,KAAKE,OAChB,EACCmC,EAAErC,KAAKE,MAAQoC,EAAEtC,KAAKE,MACxB,EAEF,KAETU,EAAYuB,UChCDI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4b3c5ff5.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst EmployeeTable = ({ filtered, sortByFirstName, sortByLastName }) => {\r\n  return (\r\n    <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th onClick={sortByLastName} style={{cursor:'pointer'}}>Last Name</th>\r\n            <th onClick={sortByFirstName} style={{cursor:'pointer'}}>First Name</th>\r\n            <th>Gender</th>\r\n            <th>Location</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filtered.map(emp => (\r\n            <tr key={emp.id.value}>\r\n              <td>{emp.name.last}</td>\r\n              <td>{emp.name.first}</td>\r\n              <td>{emp.gender}</td>\r\n              <td>{emp.location.state}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n  )\r\n}\r\n\r\nexport default EmployeeTable\r\n","\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport EmployeeTable from './EmployeeTable';\n\nfunction App() {\n  const [employees, setEmployees] = useState([])\n  const [filtered, setFiltered] = useState([])\n  const [searchState, setSearchState] = useState('')\n\n  useEffect(() => {\n    fetch('https://randomuser.me/api/?nat=us&results=25')\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        setEmployees(data.results);\n        setFiltered(data.results);\n        \n      })\n  }, []);\n\n  const sortByLastName = () => {\n    const sorted = [...employees];\n    sorted.sort((a,b) => {\n      if (a.name.last < b.name.last) {\n        return -1;\n      } else if (a.name.last > b.name.last) {\n        return 1;\n      }\n      return 0;\n    })\n    setFiltered(sorted);\n  }\n\n  const sortByFirstName = () => {\n    const sorted = [...employees];\n    sorted.sort((a,b) =>{\n      if (a.name.first < b.name.first) {\n        return -1;\n      } else if (a.name.first > b.name.first) {\n        return 1;\n      }\n      return 0;\n    })\n    setFiltered(sorted);\n  }\n\n  const handleFilterChange = (e) => {\n    setSearchState(e.target.value);\n    const results = employees.filter(emp => {\n      return emp.location.state.toLowerCase().includes(e.target.value.toLowerCase());\n    })\n    setFiltered(results);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Employee Directory</h1>\n      <form className=\"m-4\">\n        <input style={{width: '250px', textAlign:'center'}} type='text' placeholder=\"Search employees by state\" value={searchState} onChange={handleFilterChange}/>\n      </form>\n      <EmployeeTable filtered={filtered} sortByLastName={sortByLastName} sortByFirstName={sortByFirstName} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}